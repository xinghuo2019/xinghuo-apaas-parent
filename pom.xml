<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.xinghuo</groupId>
	<artifactId>xinghuo-apaas-parent</artifactId>
	<version>0.0.3</version>
	<packaging>pom</packaging>
	<name>xinghuo-apaas-parent</name>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.7.RELEASE</version>
		<relativePath />
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<maven-source-plugin.version>3.0.0</maven-source-plugin.version>
		<maven-surefire-plugin.version>2.7.1</maven-surefire-plugin.version>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<spring-cloud.version>Finchley.SR2</spring-cloud.version>
		<junit.version>4.12</junit.version>
		<!-- <mysql.version>8.0.13</mysql.version> -->
		<curator.version>2.11.1</curator.version>
		<alibaba.fastjson.version>1.2.44</alibaba.fastjson.version>
		<commons-logging.version>1.2</commons-logging.version>
		<commons-lang3.version>3.6</commons-lang3.version>
		<commons-lang.version>2.6</commons-lang.version>
		<commons-validator.version>1.6</commons-validator.version>
		<org.springframework.version>4.2.6.RELEASE</org.springframework.version>
		<org.elasticsearch.client.version>5.2.0</org.elasticsearch.client.version>
		<commons-fileupload.version>1.2.1</commons-fileupload.version>
		<pinyin4j.version>2.5.0</pinyin4j.version>
		<net.sourceforge.jexcelapi.version>2.6.12</net.sourceforge.jexcelapi.version>
		<commons-io.version>2.6</commons-io.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- spring cloud 依赖包 -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- org.apache.commons.lang3 -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>${commons-lang.version}</version>
			</dependency>

			<!-- 添加 es 支持， 支持es 5.x 以上版本 -->
			<dependency>
				<groupId>org.elasticsearch.client</groupId>
				<artifactId>transport</artifactId>
				<version>${org.elasticsearch.client.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.curator</groupId>
				<artifactId>curator-framework</artifactId>
				<version>${curator.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.curator</groupId>
				<artifactId>curator-recipes</artifactId>
				<version>${curator.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.curator</groupId>
				<artifactId>curator-client</artifactId>
				<version>${curator.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${commons-fileupload.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-validator</groupId>
				<artifactId>commons-validator</artifactId>
				<version>${commons-validator.version}</version>
			</dependency>


			<dependency>
				<groupId>com.netflix.feign</groupId>
				<artifactId>feign-httpclient</artifactId>
				<version>8.17.0</version>
			</dependency>

			<!-- 工具类 -->
			<dependency>
				<groupId>net.sourceforge.jexcelapi</groupId>
				<artifactId>jxl</artifactId>
				<version>${net.sourceforge.jexcelapi.version}</version>
			</dependency>

			<dependency>
				<groupId>com.belerweb</groupId>
				<artifactId>pinyin4j</artifactId>
				<version>${pinyin4j.version}</version>
			</dependency>

			<dependency>
				<groupId>com.github.stuxuhai</groupId>
				<artifactId>jpinyin</artifactId>
				<version>${jpinyin.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<!-- spring boot 基础框架配置 依赖jar包 -->
	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-test-support</artifactId>
			<scope>test</scope>
		</dependency>

		<!--监控基本环境配置 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- spring boot 自带 aop -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>

		<!-- spring boot集成spring cloud hystrix 断路器 -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
			<!-- <exclusions> <exclusion> <groupId>commons-lang</groupId> <artifactId>commons-lang</artifactId> 
				</exclusion> <exclusion> <groupId>org.apache.commons</groupId> <artifactId>commons-lang3</artifactId> 
				</exclusion> </exclusions> -->
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
		</dependency>

		<!-- 使用 Spring Cloud Sleuth 整合微服务器的日志记录 -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-sleuth</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>

		<!-- spring boot test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- 测试 -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- alibaba 工具类 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>${alibaba.fastjson.version}</version>
		</dependency>

		<!-- 热部署 -->
		<!-- devtools可以实现页面热部署（即页面修改后会立即生效，这个可以直接在application.properties文件中配置spring.thymeleaf.cache=false来实现） -->
		<!-- 实现类文件热部署（类文件修改后不会立即生效），实现对属性文件的热部署。 -->
		<!-- 即devtools会监听classpath下的文件变动，并且会立即重启应用（发生在保存时机），注意：因为其采用的虚拟机机制，该项重启是很快的 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>true</scope>
			<optional>true</optional> <!-- 这个需要为 true 热部署才有效 -->
		</dependency>

		<!-- 官方建议引进的依赖（可以提示配置的改动） -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-properties-migrator</artifactId>
		</dependency>

	</dependencies>

	<distributionManagement>
		<repository>
			<id>nexus-releases</id>
			<name>Nexus Release Repository</name>
			<url>http://20.97.6.57:8081/nexus/content/repositories/thirdparty/</url>
		</repository>
	</distributionManagement>

	<build>
		<!-- 配置jdk 1.8为编译版本 -->
		<!-- <defaultGoal>compile</defaultGoal> -->
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<!-- 源代码打成jar包 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<configuration>
					<attach>true</attach>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
				<!-- <version>${maven-source-plugin.version}</version> -->
				<!-- 绑定source插件到Maven的生命周期,并在生命周期后执行绑定的source的goal -->
				<!-- <executions> -->
				<!-- <execution> -->
				<!-- <phase>compile</phase> -->
				<!-- <goals> -->
				<!-- <goal>jar</goal> -->
				<!-- </goals> -->
				<!-- </execution> -->
				<!-- </executions> -->
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
			</plugin>
			<!-- <plugin> -->
			<!-- <groupId>org.springframework.boot</groupId> -->
			<!-- <artifactId>spring-boot-maven-plugin</artifactId> -->
			<!-- <configuration> -->
			<!-- <fork>true</fork> -->
			<!-- </configuration> -->
			<!-- </plugin> -->
		</plugins>
	</build>
	<!-- <modules> -->
	<!-- <module>../xinghuo-common-mybatis</module> -->
	<!-- <module>../xinghuo-commom-zkclient</module> -->
	<!-- <module>../xinghuo-commom-swagger</module> -->
	<!-- <module>../xinghuo-commom-quartz</module> -->
	<!-- <module>../xinghuo-commom-mqtt</module> -->
	<!-- <module>../xinghuo-commom-s3</module> -->
	<!-- <module>../xinghuo-commom-starter</module> -->
	<!-- <module>../xinghuo-commom-httpclient</module> -->
	<!-- <module>../xinghuo-commom-util</module> -->
	<!-- <module>../xinghuo-commom-mongodb</module> -->
	<!-- </modules> -->
</project>
